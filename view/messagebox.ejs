<script>
    // Reference to the currently displayed message card, if any
    let currentMessageCard = null;

    // Function to dismiss the card
    function dismissMessageCard() {
        if (currentMessageCard) {
            currentMessageCard.remove();
            currentMessageCard = null;
            // Remove the global click listener when the card is dismissed
            document.removeEventListener('click', dismissMessageCardGlobal);
        }
    }

    // Global click listener for dismissing the card when clicking outside
    function dismissMessageCardGlobal(event) {
        // Check if the click occurred outside the current message card
        if (currentMessageCard && !currentMessageCard.contains(event.target)) {
            dismissMessageCard();
        }
    }

    // Add click event to each message
    document.querySelectorAll('.message').forEach(msgDiv => {
        msgDiv.addEventListener('click', async (event) => {
            // Stop propagation so the document click listener doesn't immediately dismiss it
            event.stopPropagation();

            // If a card is already open, dismiss it first
            if (currentMessageCard) {
                dismissMessageCard();
            }

            const messageId = msgDiv.dataset.id; // Get message ID (optional, not used here)
            const messageContent = msgDiv.querySelector('textarea').value;

            // Display the message card
            const card = document.createElement('div');
            card.classList.add('message-card');
            card.innerHTML = `
                <h2>ANONYMOUS USER</h2>
                <textarea readonly>${messageContent}</textarea>
            `;

            // Auto-resize the textarea inside the card
            const textarea = card.querySelector('textarea');
            textarea.style.height = 'auto';
            textarea.style.height = textarea.scrollHeight + 'px';

            document.body.appendChild(card);
            currentMessageCard = card; // Store reference to the new card

            // Add click listener to the card itself to dismiss it
            card.addEventListener('click', (e) => {
                e.stopPropagation(); // Prevent bubbling
                dismissMessageCard();
            });

            // Add a global click listener to dismiss the card when clicking anywhere else
            document.addEventListener('click', dismissMessageCardGlobal);
        });
    });
</script>
